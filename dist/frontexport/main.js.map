{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-routing.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/login/login.model.ts","webpack:///./src/app/auth/login/login.validate.ts","webpack:///./src/app/auth/notice/notice.component.html","webpack:///./src/app/auth/notice/notice.component.scss","webpack:///./src/app/auth/notice/notice.component.ts","webpack:///./src/app/auth/password-forget/forget.password.model.ts","webpack:///./src/app/auth/password-forget/forget.password.validate.ts","webpack:///./src/app/auth/password-forget/password-forget.component.html","webpack:///./src/app/auth/password-forget/password-forget.component.scss","webpack:///./src/app/auth/password-forget/password-forget.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.scss","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/register/register.form.ts","webpack:///./src/app/auth/register/register.model.ts","webpack:///./src/app/auth/reset-password/reset-password.component.html","webpack:///./src/app/auth/reset-password/reset-password.component.scss","webpack:///./src/app/auth/reset-password/reset-password.component.ts","webpack:///./src/app/auth/reset-password/reset.password.model.ts","webpack:///./src/app/auth/reset-password/reset.password.validate.ts","webpack:///./src/app/auth/verify/verify.component.html","webpack:///./src/app/auth/verify/verify.component.scss","webpack:///./src/app/auth/verify/verify.component.ts","webpack:///./src/app/auth/verify/verify.model.ts","webpack:///./src/app/shared/forms/error/error.component.html","webpack:///./src/app/shared/forms/error/error.component.scss","webpack:///./src/app/shared/forms/error/error.component.ts","webpack:///./src/app/shared/languages/languages.component.html","webpack:///./src/app/shared/languages/languages.component.scss","webpack:///./src/app/shared/languages/languages.component.ts","webpack:///./src/app/shared/loader/loader.component.html","webpack:///./src/app/shared/loader/loader.component.scss","webpack:///./src/app/shared/loader/loader.component.ts","webpack:///./src/app/shared/not-found/not-found.component.html","webpack:///./src/app/shared/not-found/not-found.component.scss","webpack:///./src/app/shared/not-found/not-found.component.ts","webpack:///./src/app/shared/shared.validation.ts","webpack:///./src/app/shared/sidebar/sidebar.component.html","webpack:///./src/app/shared/sidebar/sidebar.component.scss","webpack:///./src/app/shared/sidebar/sidebar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/helpers/index.ts","webpack:///./src/helpers/lang.helper.ts","webpack:///./src/helpers/response.error.helper.ts","webpack:///./src/interceptors/header.interceptor.ts","webpack:///./src/interceptors/index.ts","webpack:///./src/interceptors/lang.interceptor.ts","webpack:///./src/interceptors/loader.intercepter.ts","webpack:///./src/main.ts","webpack:///./src/requests/auth/forget.password.ts","webpack:///./src/requests/auth/login.ts","webpack:///./src/requests/auth/register.ts","webpack:///./src/requests/auth/reset.password.ts","webpack:///./src/requests/auth/verify.ts","webpack:///./src/requests/index.ts","webpack:///./src/services/auth/auth-guard.service.ts","webpack:///./src/services/auth/auth.service.ts","webpack:///./src/services/auth/guest-guard.service.ts","webpack:///./src/services/index.ts","webpack:///./src/services/loader.service.ts","webpack:///./src/services/local.storage.service.ts","webpack:///./src/services/translate.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule, CanActivate} from '@angular/router';\nimport {AppComponent} from './app.component';\nimport {AuthGuardService} from '../services/auth/auth-guard.service';\nimport {NotFoundComponent} from './shared/not-found/not-found.component';\nimport {AuthRouting} from './auth/auth-routing';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'auth',\n    children: AuthRouting\n  },\n  {path: '404', component: NotFoundComponent},\n  {path: '**', redirectTo: '/404'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'export';\n\n  ngOnInit(): void {\n    const preLoader = document.getElementById('preloader');\n\n    if (!_.isNull(preLoader)) {\n      preLoader.remove();\n    }\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {RegisterComponent} from './auth/register/register.component';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateService} from '../services/translate.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {LanguagesComponent} from './shared/languages/languages.component';\nimport {LocalStorageService} from '../services/local.storage.service';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport * as _ from 'lodash';\nimport {LoginComponent} from './auth/login/login.component';\nimport {JwtModule, JwtModuleOptions} from '@auth0/angular-jwt';\nimport {NotFoundComponent} from './shared/not-found/not-found.component';\nimport {ErrorComponent} from './shared/forms/error/error.component';\nimport {httpInterceptorProviders} from '../interceptors';\nimport {apis} from '../requests';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ToastrModule} from 'ngx-toastr';\nimport {SidebarComponent} from './shared/sidebar/sidebar.component';\nimport {helpers} from '../helpers';\nimport {services} from '../services';\nimport { LoaderComponent } from './shared/loader/loader.component';\nimport { ResetPasswordComponent } from './auth/reset-password/reset-password.component';\nimport { PasswordForgetComponent } from './auth/password-forget/password-forget.component';\nimport { NoticeComponent } from './auth/notice/notice.component';\nimport { VerifyComponent } from './auth/verify/verify.component';\n\nexport function setupTranslateFactory(service: TranslateService, localStorage: LocalStorageService): Function {\n  const language = _.isEmpty(localStorage.get('language')) ? 'en' : localStorage.get('language');\n\n  if (_.isEmpty(localStorage.get('language'))) {\n    localStorage.set('language', language);\n  }\n\n  return () => service.use(language);\n}\n\nexport function getToken() {\n  return localStorage.getItem('access_token');\n}\n\n\nconst jwtModuleOptions: JwtModuleOptions = {\n  config: {\n    tokenGetter: getToken,\n    whitelistedDomains: ['localhost:4200']\n  }\n};\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LanguagesComponent,\n    LoginComponent,\n    NotFoundComponent,\n    ErrorComponent,\n    SidebarComponent,\n    LoaderComponent,\n    ResetPasswordComponent,\n    PasswordForgetComponent,\n    NoticeComponent,\n    VerifyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot(jwtModuleOptions),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    services,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: setupTranslateFactory,\n      deps: [TranslateService, LocalStorageService],\n      multi: true\n    },\n    helpers,\n    httpInterceptorProviders,\n    apis\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}\n","import {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {Routes} from '@angular/router';\nimport {ResetPasswordComponent} from './reset-password/reset-password.component';\nimport {PasswordForgetComponent} from './password-forget/password-forget.component';\nimport {GuestGuardService} from '../../services/auth/guest-guard.service';\nimport {NoticeComponent} from './notice/notice.component';\nimport {VerifyComponent} from './verify/verify.component';\n\nexport const AuthRouting: Routes = [\n  {path: 'register', component: RegisterComponent, canActivate: [GuestGuardService]},\n  {path: 'login', component: LoginComponent, canActivate: [GuestGuardService]},\n  {path: 'verify/:token', component: VerifyComponent, canActivate: [GuestGuardService]},\n  {path: 'password/reset/:token', component: ResetPasswordComponent, canActivate: [GuestGuardService]},\n  {path: 'password/forget', component: PasswordForgetComponent, canActivate: [GuestGuardService]},\n  {path: 'notice', component: NoticeComponent, canActivate: [GuestGuardService]}\n];\n","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/export_background.jpg)\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"loginForm\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(loginForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">{{signIn.label.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input autofocus class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" placeholder=\\\"{{signIn.label.email}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.email\\\"></app-shared-form-error>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" type=\\\"password\\\" placeholder=\\\"{{signIn.label.password}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.password\\\"></app-shared-form-error>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <app-languages></app-languages>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\\\">\\n              {{signIn.label.submit}}\\n              <app-shared-loader></app-shared-loader>\\n            </button>\\n\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{signIn.label.haveAccount}} <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/register']\\\"><b>{{lang.common.signUp}}</b></a>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/password/forget']\\\"><b>{{lang.forgetPassword.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {AppComponent} from '../../app.component';\nimport {TranslateService} from '../../../services/translate.service';\nimport {LangHelper} from '../../../helpers/lang.helper';\nimport {LoginValidate} from './login.validate';\nimport {LoginModel} from './login.model';\nimport {Login} from '../../../requests/auth/login';\nimport {ToastrService} from 'ngx-toastr';\nimport {codes} from '../../../requests';\nimport {Router} from '@angular/router';\nimport {LoaderService} from '../../../services/loader.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends AppComponent implements OnInit {\n  signIn: any = {};\n  formValidation: LoginValidate;\n  model: LoginModel;\n  api: Login;\n\n  public submit(form: any) {\n    this.formValidation.validation(form.value);\n    const self = this;\n\n    if (this.formValidation.validate() && !this.loaderService.isShow()) {\n      this.model.email = form.value.email;\n      this.model.password = form.value.password;\n      this.api.login(this.model).subscribe({\n          next(req) {\n            if (req.code !== codes.success) {\n              self.toastrService.error(req.message);\n              return false;\n            }\n            localStorage.setItem('token', req.data.access_token);\n            self.router.navigate(['']);\n          },\n        }\n      );\n    }\n\n  }\n\n  constructor(\n    private translate: TranslateService,\n    private lang: LangHelper,\n    private login: Login,\n    private toastrService: ToastrService,\n    private router: Router,\n    private loaderService: LoaderService\n  ) {\n    super();\n    this.signIn = translate.data.signIn;\n    this.lang = lang;\n    this.model = new LoginModel();\n    this.formValidation = new LoginValidate(this.signIn);\n    this.api = login;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class LoginModel {\n  public email: string;\n  public password: string;\n}\n","import {SharedValidation} from '../../shared/shared.validation';\nimport {Injectable} from '@angular/core';\nimport * as validator from 'validator';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LoginValidate extends SharedValidation {\n  email: string = 'email';\n  password: string = 'password';\n\n  validation(form: any): void {\n    let emailMsg: string = null;\n    let passwordMsg: string = null;\n\n    if (_.isEmpty(form.email)) {\n      emailMsg = this.loginLang.validation.email.empty;\n    } else if (!validator.isEmail(form.email)) {\n      emailMsg = this.loginLang.validation.email.format;\n    }\n\n    if (_.isEmpty(form.password)) {\n      passwordMsg = this.loginLang.validation.password.empty;\n    } else if (form.password.length < 8) {\n      passwordMsg = this.loginLang.validation.password.min;\n    }\n\n    this.set('email', emailMsg);\n    this.set('password', passwordMsg);\n\n  }\n\n  constructor(\n    private loginLang: any\n  ) {\n    super();\n    this.loginLang = loginLang;\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\" *ngIf=\\\"this.type === this.REGISTER_SUCCESS\\\">\\n    <div class=\\\"card card-notice\\\">\\n      <div class=\\\"card-header btn-primary\\\">\\n        <h3><strong style=\\\"color: #ffffff\\\">{{lang.register.success.title}}</strong></h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{lang.register.success.body}}\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{lang.signIn.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-12\\\" *ngIf=\\\"this.type === this.FORGET_PASSWORD_SUCCESS\\\">\\n    <div class=\\\"card card-notice\\\">\\n      <div class=\\\"card-header btn-primary\\\">\\n        <h3><strong style=\\\"color: #ffffff\\\">{{lang.forgetPassword.success.title}}</strong></h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{lang.forgetPassword.success.body}}\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{lang.signIn.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-12\\\" *ngIf=\\\"this.type === this.PASSWORD_RESET_SUCCESS\\\">\\n    <div class=\\\"card card-notice\\\">\\n      <div class=\\\"card-header btn-primary\\\">\\n        <h3><strong style=\\\"color: #ffffff\\\">{{lang.resetPassword.success.title}}</strong></h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{lang.resetPassword.success.body}}\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{lang.signIn.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","module.exports = \".card-notice {\\n  margin: 10% 30%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9TaGFyZWQvd29ya3NwYWNlcy9jcm0vZnJvbnRleHBvcnQvc3JjL2FwcC9hdXRoL25vdGljZS9ub3RpY2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL25vdGljZS9ub3RpY2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1ub3RpY2Uge1xuICBtYXJnaW46IDEwJSAzMCU7XG59XG4iXX0= */\"","import {Component, Input, OnInit} from '@angular/core';\nimport {LangHelper} from '../../../helpers/lang.helper';\nimport {Router} from '@angular/router';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'app-auth-notice',\n  templateUrl: './notice.component.html',\n  styleUrls: ['./notice.component.scss']\n})\n\nexport class NoticeComponent implements OnInit {\n  REGISTER_SUCCESS = 'auth.register.success';\n  FORGET_PASSWORD_SUCCESS = 'auth.password.forget.success';\n  PASSWORD_RESET_SUCCESS = 'password.reset.success';\n\n  type: string = null;\n\n  constructor(private lang: LangHelper, private  router: Router) {\n    this.lang = lang;\n    this.router = router;\n  }\n\n  ngOnInit(): void {\n    if (_.isEmpty(localStorage.getItem('type'))) {\n      this.router.navigate(['auth/login']);\n    }\n    this.type = localStorage.getItem('type');\n    localStorage.removeItem('type');\n  }\n}\n","export class ForgetPasswordModel {\n  public email;\n}\n","import {SharedValidation} from '../../shared/shared.validation';\nimport * as validator from 'validator';\nimport * as _ from 'lodash';\n\nexport class ForgetPasswordValidate extends SharedValidation {\n  email: string = 'email';\n\n  validation(form: any): void {\n    let emailMsg: string = null;\n\n    if (_.isEmpty(form.email)) {\n      emailMsg = this.msgLang.email.empty;\n    } else if (!validator.isEmail(form.email)) {\n      emailMsg = this.msgLang.email.format;\n    }\n\n    this.set('email', emailMsg);\n  }\n\n  constructor(\n    private msgLang: any\n  ) {\n    super();\n    this.msgLang = msgLang;\n  }\n}\n","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/export_background.jpg)\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"resetPasswordForm\\\" #resetPasswordForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(resetPasswordForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">{{lang.forgetPassword.label.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input autofocus class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" placeholder=\\\"{{lang.common.email}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.email\\\"></app-shared-form-error>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <app-languages></app-languages>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\\\">\\n              {{lang.forgetPassword.label.submit}}\\n              <app-shared-loader></app-shared-loader>\\n            </button>\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{lang.signIn.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcGFzc3dvcmQtZm9yZ2V0L3Bhc3N3b3JkLWZvcmdldC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {LangHelper} from '../../../helpers/lang.helper';\nimport {LoaderService} from '../../../services/loader.service';\nimport {ToastrService} from 'ngx-toastr';\nimport {ResetPasswordModel} from '../reset-password/reset.password.model';\nimport {ForgetPasswordValidate} from './forget.password.validate';\nimport {ForgetPasswordModel} from './forget.password.model';\nimport {ResponseErrorHelper} from '../../../helpers/response.error.helper';\nimport {ForgetPassword} from '../../../requests/auth/forget.password';\nimport {AppComponent} from '../../app.component';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-password-forget',\n    templateUrl: './password-forget.component.html',\n    styleUrls: ['./password-forget.component.scss']\n})\nexport class PasswordForgetComponent extends AppComponent implements OnInit {\n\n    model: ForgetPasswordModel;\n    formValidation: ForgetPasswordValidate;\n    type: string = '';\n\n    constructor(\n        private lang: LangHelper,\n        private loaderService: LoaderService,\n        private api: ForgetPassword,\n        private toastr: ToastrService,\n        private router: Router\n    ) {\n        super();\n        this.lang = lang;\n        this.formValidation = new ForgetPasswordValidate(this.lang.forgetPassword.validation);\n        this.model = new ForgetPasswordModel();\n    }\n\n\n    submit(form: any) {\n        this.formValidation.validation(form.value);\n        const self = this;\n\n        if (this.formValidation.validate() && !this.loaderService.isShow()) {\n            this.model.email = form.value.email;\n            this.api.forgot(this.model).subscribe({\n                    next() {\n                        localStorage.setItem('type', 'auth.password.forget.success');\n                        self.router.navigate(['/auth/notice']);\n                    },\n                    error(req) {\n                        if (ResponseErrorHelper.is401(req)) {\n                            self.toastr.error(req.error.message);\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<div class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/export_background.jpg)\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"registerForm\\\" #registerForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(registerForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">{{register.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input autofocus class=\\\"form-control\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" autocomplete=\\\"off\\\" required type=\\\"text\\\" placeholder=\\\"{{register.placeholder.name}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.name\\\"></app-shared-form-error>\\n\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\" autocomplete=\\\"off\\\" required type=\\\"email\\\" placeholder=\\\"{{register.placeholder.email}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.email\\\"></app-shared-form-error>\\n        </div>\\n        <div class=\\\"form-group \\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input class=\\\"form-control\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" required type=\\\"password\\\"\\n                   placeholder=\\\"{{register.placeholder.password}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.password\\\"></app-shared-form-error>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <app-languages></app-languages>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"checkbox checkbox-success p-t-0\\\">\\n              <input [(ngModel)]=\\\"model.agreeTerm\\\" name=\\\"agreeTerm\\\" #agreeTerm=\\\"ngModel\\\" id=\\\"checkbox-signup\\\" type=\\\"checkbox\\\" value=\\\"1\\\" required class=\\\"filled-in chk-col-light-blue\\\">\\n              <label for=\\\"checkbox-signup\\\"> {{register.termOfUse}}</label>\\n            </div>\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.agreeTerm\\\"></app-shared-form-error>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\\\">\\n              {{lang.common.signUp}}\\n              <app-shared-loader></app-shared-loader>\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{register.suggestion.haveAccount}}<a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{register.suggestion.signIn}}</b></a>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, Injectable, OnInit} from '@angular/core';\nimport {TranslateService} from '../../../services/translate.service';\nimport {AppComponent} from '../../app.component';\nimport {LangHelper} from '../../../helpers/lang.helper';\nimport {RegisterModel} from './register.model';\nimport {RegisterForm} from './register.form';\nimport {Register} from '../../../requests/auth/register';\nimport {ToastrService} from 'ngx-toastr';\nimport {ResponseErrorHelper} from '../../../helpers/response.error.helper';\nimport {LoaderService} from '../../../services/loader.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n@Injectable()\nexport class RegisterComponent extends AppComponent implements OnInit {\n  register: any = {};\n  model: RegisterModel;\n  formValidation: RegisterForm;\n  api: Register;\n\n\n  submit(form) {\n    this.formValidation.validation(form.value);\n    const self = this;\n\n    if (this.formValidation.validate() && !this.loaderService.isShow()) {\n      this.model.email = form.value.email;\n      this.model.name = form.value.name;\n      this.model.password = form.value.password;\n      this.apiRegister.register(this.model).subscribe(\n        {\n          next() {\n            localStorage.setItem('type', 'auth.register.success');\n            self.router.navigate(['/auth/notice']);\n          },\n          error(req) {\n            ResponseErrorHelper.get(req, 'email').map(email => self.toastr.error(email));\n          }\n        }\n      );\n    }\n  }\n\n  constructor(\n    private translate: TranslateService,\n    private lang: LangHelper,\n    private apiRegister: Register,\n    private toastr: ToastrService,\n    private loaderService: LoaderService,\n    private router: Router\n  ) {\n    super();\n    this.register = translate.data.register;\n    this.model = new RegisterModel();\n    this.formValidation = new RegisterForm(this.register);\n    this.api = apiRegister;\n  }\n\n  ngOnInit() {\n  }\n}\n","import * as _ from 'lodash';\nimport {SharedValidation} from '../../shared/shared.validation';\nimport {Injectable} from '@angular/core';\nimport * as validator from 'validator';\n\n@Injectable()\nexport class RegisterForm extends SharedValidation {\n  email: string = 'email';\n  name: string = 'name';\n  password: string = 'password';\n  agreeTerm: string = 'agreeTerm';\n\n  public validation(form: any): void {\n    let name: string = null;\n    let email: string = null;\n    let password: string = null;\n    let agreeTerm: string = null;\n\n    if (_.isEmpty(form.name)) {\n      name = this.registerLang.validation.name.empty;\n    }\n\n    if (_.isEmpty(form.email)) {\n      email = this.registerLang.validation.email.empty;\n    } else if (!validator.isEmail(form.email)) {\n      email = this.registerLang.validation.email.format;\n    }\n\n    if (_.isEmpty(form.password)) {\n      password = this.registerLang.validation.password.empty;\n    } else if (form.password.length < 8) {\n      password = this.registerLang.validation.password.min;\n    }\n\n    if (form.agreeTerm === false || form.agreeTerm === undefined) {\n      agreeTerm = this.registerLang.validation.agreeTerm.empty;\n    }\n\n    this.set('name', name);\n    this.set('email', email);\n    this.set('password', password);\n    this.set('agreeTerm', agreeTerm);\n  }\n\n  constructor(\n    private registerLang: any\n  ) {\n    super();\n    this.registerLang = registerLang;\n  }\n}\n","export class RegisterModel {\n  public email: string;\n  public password: string;\n  public name: string;\n  public agreeTerm: boolean;\n}\n","module.exports = \"<div *ngIf=\\\"isVerified\\\" class=\\\"login-register\\\" style=\\\"background-image:url(assets/images/background/export_background.jpg)\\\">\\n  <div class=\\\"login-box card\\\">\\n    <div class=\\\"card-body\\\">\\n      <form class=\\\"form-horizontal form-material\\\" id=\\\"resetPasswordForm\\\" #resetPasswordForm=\\\"ngForm\\\" (ngSubmit)=\\\"submit(resetPasswordForm)\\\">\\n        <h3 class=\\\"box-title m-b-20\\\">{{lang.resetPassword.label.title}}</h3>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input autofocus class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" autocomplete=\\\"off\\\" type=\\\"password\\\"\\n                   placeholder=\\\"{{lang.resetPassword.placeholder.password}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.password\\\"></app-shared-form-error>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <input autofocus class=\\\"form-control\\\" #name=ngModel [(ngModel)]=\\\"model.rePassword\\\" name=\\\"rePassword\\\" autocomplete=\\\"off\\\" type=\\\"password\\\"\\n                   placeholder=\\\"{{lang.resetPassword.placeholder.rePassword}}\\\">\\n          </div>\\n          <app-shared-form-error [validate]=\\\"formValidation\\\" [elementName]=\\\"formValidation.rePassword\\\"></app-shared-form-error>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <app-languages></app-languages>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center p-b-20\\\">\\n          <div class=\\\"col-xs-12\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\\\">\\n              {{lang.resetPassword.label.submit}}\\n              <app-shared-loader></app-shared-loader>\\n            </button>\\n\\n          </div>\\n        </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!isVerified\\\" class=\\\"preloader\\\" id=\\\"preloader_verify\\\">\\n  <svg class=\\\"circular\\\" viewBox=\\\"25 25 50 50\\\">\\n    <circle class=\\\"path\\\" cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"20\\\" fill=\\\"none\\\" stroke-width=\\\"2\\\" stroke-miterlimit=\\\"10\\\"/>\\n  </svg>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {LangHelper} from '../../../helpers/lang.helper';\nimport {ResetPasswordValidate} from './reset.password.validate';\nimport {ResetPasswordModel} from './reset.password.model';\nimport {LoaderService} from '../../../services/loader.service';\nimport {ResetPassword} from '../../../requests/auth/reset.password';\nimport {ResponseErrorHelper} from '../../../helpers/response.error.helper';\nimport {ToastrService} from 'ngx-toastr';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  model: ResetPasswordModel;\n  formValidation: ResetPasswordValidate;\n  isVerified: boolean = false;\n\n  constructor(private lang: LangHelper,\n              private loaderService: LoaderService,\n              private toastr: ToastrService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private api: ResetPassword\n  ) {\n    this.lang = lang;\n    this.formValidation = new ResetPasswordValidate(this.lang.resetPassword.validation);\n    this.model = new ResetPasswordModel();\n  }\n\n  submit(form: any) {\n    this.formValidation.validation(form.value);\n    const self = this;\n\n    if (this.formValidation.validate() && !this.loaderService.isShow()) {\n      this.model.password = form.value.password;\n      this.api.reset(this.model).subscribe({\n          next(req) {\n            localStorage.setItem('type', 'password.reset.success');\n            self.router.navigate(['/auth/notice']);\n          },\n          error(req) {\n            if (ResponseErrorHelper.is401(req)) {\n              self.toastr.error(req.error.message);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      const token = params.get('token');\n\n      this.model = new ResetPasswordModel();\n      this.model.token = token;\n      const self = this;\n\n      this.api.reset(this.model).subscribe({\n        next() {\n          self.isVerified = true;\n        },\n        error(req) {\n          if (ResponseErrorHelper.is404(req)) {\n            ResponseErrorHelper.redirect404(self.router);\n          }\n        }\n      });\n    });\n  }\n\n}\n","export class ResetPasswordModel {\n  public password;\n  public rePassword;\n  public token;\n}\n","import {SharedValidation} from '../../shared/shared.validation';\nimport * as validator from 'validator';\nimport * as _ from 'lodash';\n\nexport class ResetPasswordValidate extends SharedValidation {\n  password: string = 'password';\n  rePassword: string = 'rePassword';\n\n  validation(form: any): void {\n    let passwordMsg: string = null;\n    let rePasswordMsg: string = null;\n\n    if (_.isEmpty(form.password)) {\n      passwordMsg = this.msgLang.password.empty;\n    } else if (!validator.isLength(form.password, {min: 8})) {\n      passwordMsg = this.msgLang.password. min;\n    }\n\n    if (_.isEmpty(form.rePassword)) {\n      rePasswordMsg = this.msgLang.rePassword.empty;\n    } else if (form.password !== form.rePassword) {\n      rePasswordMsg = this.msgLang.rePassword.notMatch;\n    }\n\n\n    this.set('password', passwordMsg);\n    this.set('rePassword', rePasswordMsg);\n  }\n\n  constructor(\n    private msgLang: any\n  ) {\n    super();\n    this.msgLang = msgLang;\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\" *ngIf=\\\"this.isVerified\\\">\\n    <div class=\\\"card card-notice\\\">\\n      <div class=\\\"card-header btn-primary\\\">\\n        <h3><strong style=\\\"color: #ffffff\\\" >{{lang.register.verify.title}}</strong></h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            {{lang.register.verify.body}}\\n          </div>\\n        </div>\\n        <div class=\\\"form-group m-b-0\\\">\\n          <div class=\\\"col-sm-12 text-center\\\">\\n            <a class=\\\"text-info m-l-5\\\" [routerLink]=\\\"['/auth/login']\\\"><b>{{lang.signIn.label.title}}</b></a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".card-notice {\\n  margin: 10% 30%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9TaGFyZWQvd29ya3NwYWNlcy9jcm0vZnJvbnRleHBvcnQvc3JjL2FwcC9hdXRoL3ZlcmlmeS92ZXJpZnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3ZlcmlmeS92ZXJpZnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1ub3RpY2Uge1xuICBtYXJnaW46IDEwJSAzMCU7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport * as _ from 'lodash';\nimport {VerifyModel} from './verify.model';\nimport {Verify} from '../../../requests/auth/verify';\nimport {ResponseErrorHelper} from '../../../helpers/response.error.helper';\nimport {LangHelper} from '../../../helpers/lang.helper';\n\n@Component({\n  selector: 'app-verify',\n  templateUrl: './verify.component.html',\n  styleUrls: ['./verify.component.scss']\n})\nexport class VerifyComponent implements OnInit {\n  token: string = null;\n  model: VerifyModel;\n  isVerified: boolean = false;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private api: Verify,\n              private lang: LangHelper\n  ) {\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.api = api;\n    this.lang = lang;\n  }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(params => {\n      this.token = params.get('token');\n\n      if (_.isEmpty(this.token)) {\n        this.router.navigate(['404']);\n      }\n\n      this.model = new VerifyModel();\n      this.model.token = this.token;\n      const self = this;\n\n      this.api.verify(this.model).subscribe({\n        next() {\n          self.isVerified = true;\n        },\n        error(req) {\n          if (ResponseErrorHelper.is404(req)) {\n            ResponseErrorHelper.redirect404(self.router);\n          }\n        }\n      });\n    });\n  }\n\n}\n","export class VerifyModel {\n  public token;\n}\n","module.exports = \"<div *ngIf=\\\"validate.has(elementName)\\\">\\n  <span class=\\\"text-danger\\\">{{validate.get(elementName)}}</span>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9mb3Jtcy9lcnJvci9lcnJvci5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-shared-form-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n\n  @Input() validate: object;\n  @Input() elementName: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<select class=\\\"form-control\\\" (change)=\\\"change($event)\\\">\\n    <option *ngFor=\\\"let item of languages; index as i;\\\" [selected]=\\\"currentLang == item.key\\\" value=\\\"{{item.key}}\\\" >{{item.title}}</option>\\n</select>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sYW5ndWFnZXMvbGFuZ3VhZ2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '../../../services/translate.service';\nimport {LocalStorageService} from '../../../services/local.storage.service';\n\n@Component({\n    selector: 'app-languages',\n    templateUrl: './languages.component.html',\n    styleUrls: ['./languages.component.scss']\n})\nexport class LanguagesComponent implements OnInit {\n    languages: [] = [];\n    currentLang: string = 'en';\n\n    public change(event) {\n        this.localStorage.set('language', event.target.value);\n        window.location.reload();\n    }\n\n    constructor(private trans: TranslateService, private localStorage: LocalStorageService) {\n        this.languages = trans.data.languages;\n        this.currentLang = localStorage.get('language');\n    }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<i *ngIf=\\\"loader.isShow()\\\" class=\\\"fa fa-spin fa-spinner\\\"></i>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sb2FkZXIvbG9hZGVyLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {LoaderService} from '../../../services/loader.service';\n\n@Component({\n  selector: 'app-shared-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor(private loader: LoaderService) {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  Page not found - 404\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    document.getElementById('preloader').remove();\n  }\n}\n","import * as _ from 'lodash';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport abstract class SharedValidation {\n\n  public errors: any[] = [];\n\n  public validate(): boolean {\n    return Object.entries(this.errors).length === 0;\n  }\n\n  public abstract validation(form: any): void;\n\n  public has(key: string): boolean {\n    return !_.isEmpty(this.errors[key]);\n  }\n\n  public get(key: string): any {\n    return this.errors[key];\n  }\n\n  public set(key: string, value: string) {\n    if (_.isEmpty(value)) {\n      this.remove(key);\n      return false;\n    }\n\n    this.errors[key] = value;\n  }\n\n  private remove(key: string) {\n    if (this.has(key)) {\n      delete this.errors[key];\n    }\n  }\n}\n","module.exports = \"<p>\\n  sidebar works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://crm.local.com/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {LangHelper} from './lang.helper';\nimport {ResponseErrorHelper} from './response.error.helper';\n\nexport const helpers = [\n  LangHelper,\n  ResponseErrorHelper\n];\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '../services/translate.service';\n\n@Injectable()\nexport class LangHelper {\n  public common: any = {};\n  public resetPassword: any = {};\n  public forgetPassword: any = {};\n  public signIn: any = {};\n  public register: any = {};\n\n  constructor(private translate: TranslateService) {\n    this.common = translate.data.common;\n    this.resetPassword = translate.data.resetPassword;\n    this.forgetPassword = translate.data.forgetPassword;\n    this.signIn = translate.data.signIn;\n    this.register = translate.data.register;\n  }\n}\n","import {HttpErrorResponse} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\nexport class ResponseErrorHelper {\n\n  public static has(req: HttpErrorResponse, key: string): boolean {\n    return req.error.errors.hasOwnProperty(key);\n  }\n\n  public static get(req: HttpErrorResponse, key: string): [] {\n    let result: [] = [];\n\n    if (this.has(req, key)) {\n      result = req.error.errors[key];\n    }\n\n    return result;\n  }\n\n  public static is401(req: HttpErrorResponse): boolean {\n    return req.status === 401;\n  }\n\n  public static is404(req: HttpErrorResponse): boolean {\n    return req.status === 404;\n  }\n\n  public static redirect404(router: Router) {\n    router.navigate(['404']);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {\n  HttpEvent,\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    const jsonReq = req.clone({\n        headers: req.headers.set('Content-Type', 'application/json')\n      }\n    );\n\n    return next.handle(jsonReq);\n  }\n}\n","import {HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {HeaderInterceptor} from './header.interceptor';\nimport {AuthInterceptor} from './auth.interceptor';\nimport {AuthService} from '../services/auth/auth.service';\nimport {LangInterceptor} from './lang.interceptor';\nimport {ErrorInterceptor} from './error.interceptor';\nimport {LoaderInterceptor} from './loader.intercepter';\n\nexport const httpInterceptorProviders = [\n  {provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: LangInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true},\n  /*{provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, deps: [AuthService], multi: true},*/\n];\n","import {Injectable} from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport {throwError, Observable, BehaviorSubject, of} from 'rxjs';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class LangInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const lang = _.isEmpty(localStorage.getItem('language')) ? 'en' : localStorage.getItem('language');\n    const langReq = req.clone(\n      {\n        headers: req.headers.set('lang', lang)\n      }\n    );\n    return next.handle(langReq);\n  }\n\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {\n  HttpEvent,\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {finalize, delay} from 'rxjs/operators';\nimport {LoaderService} from '../services/loader.service';\n\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n\n    if (!req.url.includes('api/')) {\n      return next.handle(req);\n    }\n\n    const loaderService = this.injector.get(LoaderService);\n\n    loaderService.show();\n\n    return next.handle(req).pipe(\n      delay(1000),\n      finalize(() => loaderService.hide())\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ForgetPasswordModel} from '../../app/auth/password-forget/forget.password.model';\n\n@Injectable()\nexport class ForgetPassword {\n    public constructor(private http: HttpClient) {\n        this.http = http;\n    }\n\n    public forgot(model: ForgetPasswordModel): Observable<any> {\n        return this.http.post<any>('api/v1/auth/password/forget', model);\n    }\n}\n","import {LoginModel} from '../../app/auth/login/login.model';\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class Login {\n  public constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  public login(model: LoginModel): Observable<any> {\n    return this.http.post<any>('api/v1/auth/login', model);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {RegisterModel} from '../../app/auth/register/register.model';\n\n@Injectable()\nexport class Register {\n  public constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  public register(model: RegisterModel): Observable<any> {\n    return this.http.post<any>('api/v1/auth/register', model);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ResetPasswordModel} from '../../app/auth/reset-password/reset.password.model';\n\n@Injectable()\nexport class ResetPassword {\n  public constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  public reset(model: ResetPasswordModel): Observable<any> {\n    return this.http.post<any>('api/v1/auth/password/reset', model);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {VerifyModel} from '../../app/auth/verify/verify.model';\n\n@Injectable()\nexport class Verify {\n  public constructor(private http: HttpClient) {\n    this.http = http;\n  }\n\n  public verify(model: VerifyModel): Observable<any> {\n    return this.http.post<any>('api/v1/auth/email/verify', model);\n  }\n}\n","import {Login} from './auth/login';\nimport {Register} from './auth/register';\nimport {ResetPassword} from './auth/reset.password';\nimport {ForgetPassword} from './auth/forget.password';\nimport {Verify} from './auth/verify';\n\nexport const codes = {\n  success: 1,\n};\n\nexport const apis = [\n  Login,\n  Register,\n  ResetPassword,\n  ForgetPassword,\n  Verify\n];\n","import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {\n  }\n\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      this.router.navigate(['auth/login']);\n      return false;\n    }\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class AuthService {\n  tokenName = 'token';\n\n  constructor(public jwtHelper: JwtHelperService) {\n  }\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem(this.tokenName);\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  public getAuthorizationToken(): string {\n    return localStorage.getItem(this.tokenName);\n  }\n\n  public isAuthorizationToken(): boolean {\n    return !_.isEmpty(localStorage.getItem(this.tokenName));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Router, CanActivate} from '@angular/router';\nimport {AuthService} from './auth.service';\n\n@Injectable()\nexport class GuestGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {\n  }\n\n  canActivate(): boolean {\n    if (this.auth.isAuthenticated()) {\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\n","import {TranslateService} from './translate.service';\nimport {LocalStorageService} from './local.storage.service';\nimport {AuthService} from './auth/auth.service';\nimport {AuthGuardService} from './auth/auth-guard.service';\nimport {LoaderService} from './loader.service';\nimport {GuestGuardService} from './auth/guest-guard.service';\n\nexport const services = [\n  TranslateService,\n  LocalStorageService,\n  AuthService,\n  AuthGuardService,\n  GuestGuardService,\n  LoaderService\n];\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  showLoader = false;\n\n  show() {\n    this.showLoader = true;\n  }\n\n  hide() {\n    this.showLoader = false;\n  }\n\n  isShow() {\n    return this.showLoader;\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {LOCAL_STORAGE, StorageService} from 'ngx-webstorage-service';\n\n@Injectable()\nexport class LocalStorageService {\n\n    constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {\n        this.storage = storage;\n    }\n\n    get(key: string): any {\n        return this.storage.get(key);\n    }\n\n    set(key: string, value: any): void {\n        this.storage.set(key, value);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class TranslateService {\n  data: any = {};\n\n  constructor(private http: HttpClient) {\n  }\n\n  use(lang: string): Promise<{}> {\n    return new Promise<{}>((resolve, reject) => {\n      const langPath = `../assets/i18n/${lang || 'en'}.json`;\n      this.http.get<{}>(langPath).subscribe(\n        translation => {\n          this.data = Object.assign({}, translation || {});\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}\n"],"sourceRoot":""}